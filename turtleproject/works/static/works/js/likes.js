document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const authModal = document.getElementById('authModal');
    const workModal = document.getElementById('workModal');
    const closeModals = document.querySelectorAll('.close-modal');

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    closeModals.forEach(closeBtn => {
        closeBtn.addEventListener('click', function() {
            authModal.style.display = 'none';
            workModal.style.display = 'none';
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.addEventListener('click', function(event) {
        if (event.target === authModal) authModal.style.display = 'none';
        if (event.target === workModal) workModal.style.display = 'none';
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞–±–æ—Ç
    document.querySelectorAll('.work-card').forEach(card => {
        card.addEventListener('click', function(e) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∫–ª–∏–∫ –ø–æ –∏–∫–æ–Ω–∫–µ –ª–∞–π–∫–∞
            if (e.target.closest('.like-icon') || e.target.closest('.likes-count')) {
                return;
            }

            const workId = this.dataset.workId;
            fetch(`/works/get_work_details/${workId}/`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–∞–Ω–Ω—ã–º–∏
                        document.querySelector('.work-code').textContent = data.code;
                        document.querySelector('.modal-work-image').src = data.image;

                        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                        const stats = document.querySelector('.modal-work-stats');
                        stats.innerHTML = `
                            <span class="modal-like-icon ${data.user_has_liked ? 'liked' : ''}"
                                  data-work-id="${workId}"
                                  ${data.is_authenticated ? '' : 'data-unauth="true"'}>
                                ${data.user_has_liked ? '‚ù§Ô∏è' : 'ü§ç'}
                            </span>
                            <span class="modal-likes-count" data-work-id="${workId}">${data.likes}</span>
                            <span class="modal-comments-count">üí¨ ${data.comments}</span>
                        `;

                        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–∞–π–∫–æ–≤
                        const likesList = document.querySelector('.likes-list');
                        likesList.innerHTML = data.liked_by.map(user =>
                            `<li>${user.username}</li>`
                        ).join('') || '<li>–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ü–µ–Ω–∏–ª —ç—Ç—É —Ä–∞–±–æ—Ç—É</li>';

                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                        workModal.style.display = 'block';

                        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
                        setupModalEventListeners();
                    }
                })
                .catch(error => console.error('Error:', error));
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—á–µ—Ç—á–∏–∫–æ–≤ –ª–∞–π–∫–æ–≤ (–æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–ø–∏—Å–∫–∞)
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('likes-count')) {
            const workId = e.target.dataset.workId;
            const modal = document.getElementById('workModal');

            // –ï—Å–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ –¥–ª—è —ç—Ç–æ–π —Ä–∞–±–æ—Ç—ã, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
            if (modal.style.display === 'block' && modal.querySelector('.modal-likes-count').dataset.workId === workId) {
                modal.querySelector('.likes-list-container').style.display = 'block';
            } else {
                // –ò–Ω–∞—á–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
                const card = document.querySelector(`.work-card[data-work-id="${workId}"]`);
                card.click();
            }
        }
    });

    // –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    function setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∏–∫–æ–Ω–æ–∫ –ª–∞–π–∫–æ–≤ (–≤–∫–ª—é—á–∞—è —Ç–µ, —á—Ç–æ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ)
        document.querySelectorAll('.like-icon, .modal-like-icon').forEach(icon => {
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            icon.addEventListener('mouseenter', function() {
                if (!this.dataset.unauth) {
                    this.style.transform = 'scale(1.1)';
                }
            });

            icon.addEventListener('mouseleave', function() {
                this.style.transform = 'scale(1)';
            });

            // –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            icon.addEventListener('click', handleLikeClick);
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –ª–∞–π–∫—É
    function handleLikeClick(e) {
        e.stopPropagation();
        const icon = this;

        // –î–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if (icon.dataset.unauth === "true") {
            e.preventDefault();
            authModal.style.display = 'block';
            return;
        }

        const workId = icon.dataset.workId;
        let likesCount;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∏–∫–æ–Ω–∫–∞ - –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∏–ª–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        if (icon.closest('.work-modal-content')) {
            likesCount = icon.nextElementSibling;
        } else {
            likesCount = icon.nextElementSibling;
        }

        // –í–∏–∑—É–∞–ª—å–Ω—ã–π feedback –ø—Ä–∏ –∫–ª–∏–∫–µ
        icon.style.transform = 'scale(0.9)';
        setTimeout(() => {
            icon.style.transform = 'scale(1.1)';
        }, 100);

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        fetch(`/works/like_work/${workId}/`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': getCookie('csrftoken')
            },
        })
        .then(response => {
            if (!response.ok) throw new Error('Network error');
            return response.json();
        })
        .then(data => {
            if (data.success) {
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∫–æ–Ω–∫–∏
                icon.innerHTML = data.liked ? '‚ù§Ô∏è' : 'ü§ç';
                icon.classList.toggle('liked', data.liked);

                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ
                document.querySelectorAll(`.likes-count[data-work-id="${workId}"]`).forEach(el => {
                    el.textContent = data.likes;
                });

                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
                if (workModal.style.display === 'block' &&
                    workModal.querySelector('.modal-likes-count').dataset.workId === workId) {
                    workModal.querySelector('.modal-likes-count').textContent = data.likes;

                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–∞–π–∫–æ–≤
                    const likesList = workModal.querySelector('.likes-list');
                    likesList.innerHTML = data.liked_by.map(user =>
                        `<li>${user.username}</li>`
                    ).join('') || '<li>–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ü–µ–Ω–∏–ª —ç—Ç—É —Ä–∞–±–æ—Ç—É</li>';
                }
            } else {
                throw new Error(data.error || 'Unknown error');
            }
        })
        .catch(error => {
            console.error('Like error:', error);
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            icon.innerHTML = icon.classList.contains('liked') ? '‚ù§Ô∏è' : 'ü§ç';
        })
        .finally(() => {
            icon.style.transform = 'scale(1)';
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è CSRF —Ç–æ–∫–µ–Ω–∞
function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}